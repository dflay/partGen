# Macro file for example B1
# 
# Can be run in batch, without graphic
# or interactively: Idle> /control/execute run1.mac
#
# Change the default number of workers (in multi-threading mode) 
#/run/numberOfThreads 4
#
# Initialize kernel
/run/initialize
#
/control/verbose 2
/run/verbose 2
/event/verbose 0
/tracking/verbose 1
# 
# 10 GeV electrons along (0,0,1)  
/gun/particle electron 
/gun/energy 10 GeV
# now my detector setup 
/partGen/tgtXsize 20 cm 
/partGen/tgtYsize 20 cm 
/partGen/tgtZsize 5  cm 
/partGen/detXsize 20 cm 
/partGen/detYsize 20 cm 
/partGen/detZsize 5  cm 
/partGen/detX     0  cm 
/partGen/detY     0  cm 
/partGen/detZ     20 cm 
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointVector -1 0 0
/vis/viewer/set/lightsVector -1 0 0
#
# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# run events 
/run/beamOn 5

